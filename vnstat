#!/usr/bin/perl
use strict;

# Resources
our $vnstatPath = '';

main();

sub main {
	determineVnstatPath();

	if ( $ARGV[0] and $ARGV[0] =~ /^\s*autoconf\s*$/i ) {
		print("yes\n");
	}
	elsif ( $ARGV[0] and $ARGV[0] =~ /^\s*config\s*$/i ) {
		printGraphConfig();
	}
	else {
		printData();
	}

	exit 0;
}

sub determineVnstatPath {
	$vnstatPath = `which vnstat`;
	chomp($vnstatPath);

	die("Didn't find vnstat in \$PATH. Is it correctly installed?\n") if (length($vnstatPath) == 0);
}

sub printGraphConfig {
	print <<EOS;
graph_title Network traffic
graph_vtitle Amount of traffic
graph_category network
graph_scale yes
graph_info Shows the amount of in- and outbound traffic based on the data collected by vnStat
graph_args --base 1000
	
out.label Outbound
out.type GAUGE
out.colour 00FF00

in.label Inbound
in.type GAUGE
in.colour DF7401

overall.label Overall
overall.type GAUGE
overall.colour 000000
EOS
}

sub printData {
	my $todayLine = `vnstat | grep today`;
	$todayLine =~ s/ +/ /g;

	my @values = split(/ /, $todayLine);

	printf("out.value %d\n", normalize($values[5], $values[6]));
	printf("in.value %d\n", normalize($values[2], $values[3]));
	printf("overall.value %d\n", normalize($values[8], $values[9]));
}

sub normalize {
	my ($value,$unit) = @_;
	my $result = 0.0;

	if ($unit eq 'KiB') {
		$result = $value * 1024;
	}
	elsif ($unit eq 'MiB') {
		$result = ( $value * 1024 ) * 1024;
	}
	elsif ($unit eq 'GiB') {
		$result = (($value * 1024) * 1024) * 1024;
	}
	elsif ($unit eq 'TiB') {
		$result = ((($value * 1024) * 1024 ) * 1024 ) * 1024;
	}
	else {
		return 2147483647;
	}

	return $result;
}
